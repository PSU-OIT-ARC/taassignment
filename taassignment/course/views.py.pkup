from django.shortcuts import render
from django.contrib.auth import decorators
from taassignment.course.models import Course 
   

# Create your views here.

# Public view of the page, also act as homepage
def public_view_list(request):
    course = Course.objects.raw("select a.id, a.course_no, a.course_name "\
          #  , concat(c.first_name,' ',c.last_name) as teacher  "\
 #          " concat(e.first_name,' ',e.last_name) as ta "\
           " from course_course as a inner join course_course_faculties as b on (a.course_no= b.course_id) "
    #       " left outer join user as c on (b.user_id = c.id) ")
#           " right outer join course_course_tas  as d on (d.course_id = a.course_no)  inner join  user e on (d.user_id=e.id) ")
 #   no_of_courses = sum(1 for course in courses)

    return render(request, "course/public_view_list.html", {
		"courses" : course,
        "has_courses" : no_of_courses
	})

# Faculty home page
@decorators.permission_required('course.change_ta',raise_exception=True)
def faculty_view_list(request):
    courses = Course.objects.filter(faculties=request.user)
    no_of_course = courses.count()

    return render(request, "course/public_view_list.html", {
        "courses" : courses,
        "has_courses" : no_of_course,
    })
